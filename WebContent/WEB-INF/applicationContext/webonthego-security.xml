<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

  <global-method-security pre-post-annotations="enabled" secured-annotations="enabled">
    <expression-handler ref="expressionHandler" />
  </global-method-security>

  <beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
    <beans:property name="permissionEvaluator" ref="permissionEvaluator" />
  </beans:bean>

  <beans:bean id="permissionEvaluator" class="com.trc.security.permission.evaluator.InternalPermissionEvaluator">
    <beans:constructor-arg index="0">
      <beans:map key-type="java.lang.String" value-type="com.trc.security.permission.Permission">
        <beans:entry key="canUpdate" value-ref="updatePermission" />
      </beans:map>
    </beans:constructor-arg>
  </beans:bean>

  <beans:bean id="updatePermission" class="com.trc.security.permission.UpdatePermission" init-method="init" />

  <http auto-config="false" use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
    <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
    <custom-filter position="FORM_LOGIN_FILTER" ref="myAuthFilter" />
    <session-management session-authentication-strategy-ref="sas" />

    <!-- 
    <port-mappings>
      <port-mapping http="80" https="443" /> 
    </port-mappings> 
    -->
     
    <intercept-url pattern="/static/**" filters="none" />
    <intercept-url pattern="/favicon.ico" filters="none" />
    <intercept-url pattern="/home" access="permitAll" />
    <intercept-url pattern="/login/**" access="permitAll" />
    <intercept-url pattern="/logout/**" access="isAuthenticated()" />
    <intercept-url pattern="/register/**" access="permitAll" />
    <intercept-url pattern="/activate/**" access="isAuthenticated()" />
    <intercept-url pattern="/support/ticket/**" access="isAuthenticated()" />
    <intercept-url pattern="/support/**" access="permitAll" />
    <intercept-url pattern="/retrieve/**" access="permitAll" />
    <intercept-url pattern="/servicerep/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER', 'ROLE_SERVICEREP')" />
    <intercept-url pattern="/manager/**" access="hasAnyRole('ROLE_MANAGER', 'ROLE_ADMIN')" />
    <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN')" />
    <intercept-url pattern="/" access="permitAll" />
    <intercept-url pattern="/**" access="isAuthenticated()" />
    
    <access-denied-handler error-page="/exception/accessDenied.jsp" />
    <logout invalidate-session="true" logout-success-url="http://www.webonthego.com/" />
  </http>

  <!-- Begin Concurrency Filters -->
  <beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <beans:property name="loginFormUrl" value="/login" />
    <beans:property name="forceHttps" value="false" />
  </beans:bean>

  <beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
    <beans:property name="sessionRegistry" ref="sessionRegistry" />
    <beans:property name="expiredUrl" value="/timeout" />
  </beans:bean>

  <beans:bean id="myAuthFilter" class="com.trc.web.security.authentication.MyAuthenticationProcessingFilter">
    <beans:property name="sessionAuthenticationStrategy" ref="sas" />
    <beans:property name="authenticationManager" ref="webonthegoAuthentication" />
    <beans:property name="authenticationFailureHandler" ref="failureHandler" />
    <beans:property name="authenticationSuccessHandler" ref="successHandler" />
  </beans:bean>

  <beans:bean id="successHandler" class="com.trc.web.security.authentication.MySavedRequestAwareAuthenticationSuccessHandler">
    <beans:property name="defaultTargetUrl" value="/manage" />
  </beans:bean>
  <beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
    <beans:property name="defaultFailureUrl" value="/login?login_error=1" />
  </beans:bean>

  <beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    <beans:property name="maximumSessions" value="1" />
  </beans:bean>

  <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  <!-- End Concurrency Filters -->

  <!-- Begin Custom UserDetailsService -->
  <beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
    <beans:property name="providers">
      <beans:list>
        <beans:ref local="daoAuthenticationProvider" />
      </beans:list>
    </beans:property>
  </beans:bean>

  <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <beans:property name="userDetailsService" ref="myUserDetailsService" />
  </beans:bean>

  <beans:bean id="myUserDetailsService" class="com.trc.web.security.authentication.MyUserDetailsService">
    <beans:property name="userManager" ref="userManager" />
    <!-- <beans:property name="assembler" ref="assembler" /> -->
  </beans:bean>

  <authentication-manager alias="webonthegoAuthentication">
    <authentication-provider user-service-ref="myUserDetailsService">
      <password-encoder hash="md5" />
    </authentication-provider>
  </authentication-manager>
  <!-- End Custom UserDetailsService -->

</beans:beans>